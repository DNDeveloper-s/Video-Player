/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./public/assets/js/main.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./public/assets/js/bookmark.js":
/*!**************************************!*\
  !*** ./public/assets/js/bookmark.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const utils = __webpack_require__(/*! ./utils/utilities */ \"./public/assets/js/utils/utilities.js\");\r\n\r\nfunction addBookMark(options) {\r\n    /**\r\n     * \r\n     * options = {\r\n     *      timeStamp: Time\r\n     *      description: 'String'\r\n     *      root: RootPath 'String'\r\n     *      name: Video Name 'String'\r\n     * }\r\n     * \r\n     */\r\n\r\n    console.log(options);\r\n    \r\n    const {updateVideo} = __webpack_require__(/*! ./main */ \"./public/assets/js/main.js\");\r\n\r\n    updateVideo({\r\n        name: options.name,\r\n        root: options.root,\r\n        bookmarks: {\r\n            timeStamp: options.timeStamp,\r\n            description: options.description\r\n        }\r\n    })\r\n\r\n    showBookMark({\r\n        name: options.name,\r\n        root: options.root,\r\n        timeStamp: options.timeStamp,\r\n        description: options.description\r\n    });\r\n    \r\n}\r\n\r\nfunction showBookMark(options) {\r\n    const bookMarkListContainer = document.getElementById('bookmark_list');\r\n\r\n    const htmlToAdd = `\r\n        <div class=\"bookmark\" data-video-title=\"${options.name}\" data-timestamp=\"${options.timeStamp}\">\r\n            <div class=\"description\">\r\n                ${options.description}\r\n            </div>\r\n            <div class=\"time_stamp\">\r\n                ${timeStampConv(options.timeStamp)}\r\n            </div>\r\n        </div>\r\n    `;\r\n\r\n    bookMarkListContainer.insertAdjacentHTML('beforeend', htmlToAdd);\r\n    initBookMarksEvents();\r\n}\r\n\r\nfunction initBookMarksEvents() {\r\n    const bookMarkListContainer = document.getElementById('bookmark_list');\r\n    const bookmarks = bookMarkListContainer.querySelectorAll('.bookmark');\r\n\r\n    bookmarks.forEach(bookmark => {\r\n        if(!bookmark.dataset.clickEvent || !bookmark.dataset.clickEvent === 'true') {\r\n            bookmark.dataset.clickEvent = true;\r\n            bookmark.addEventListener('click', function() {\r\n                const {playVideo} = __webpack_require__(/*! ./main */ \"./public/assets/js/main.js\");\r\n                playVideo({\r\n                    name: bookmark.dataset.videoTitle,\r\n                    root: window.currentPath,\r\n                    currentTime: bookmark.dataset.timestamp\r\n                });\r\n            })\r\n        }\r\n    })\r\n}\r\n\r\nfunction timeStampConv(timeStamp) {\r\n    return `${parseInt(timeStamp / 60)}:${parseInt(timeStamp % 60)}`;\r\n}\r\n\r\nfunction initBookMarkInputHandler(videoObj) {\r\n    const videoTimeLine = document.querySelector('.video-timeline');\r\n    const bookMarkModal = videoTimeLine.querySelector('.add_bookmark_option');\r\n    const bookmarkInput = bookMarkModal.querySelector('.bookmark_input');\r\n    bookmarkInput.focus();\r\n    bookmarkInput.addEventListener('keydown', function(e) {\r\n        if(e.key === 'Enter') {\r\n            addBookMark({\r\n                ...videoObj,\r\n                description: this.value\r\n            });\r\n        }\r\n    });\r\n}\r\n\r\nfunction showThisVideoBookMarks(videoObj) {\r\n    const curVideo = utils.fetchVideo(videoObj);\r\n    const bookMarkListContainer = document.getElementById('bookmark_list');\r\n    bookMarkListContainer.innerHTML = '';\r\n    curVideo.bookmarks.forEach(bookmark => {\r\n        showBookMark({\r\n            name: curVideo.name,\r\n            root: videoObj.root,\r\n            ...bookmark\r\n        });\r\n    })\r\n}\r\n\r\nmodule.exports = {\r\n    initBookMarkInputHandler,\r\n    showThisVideoBookMarks\r\n}\n\n//# sourceURL=webpack:///./public/assets/js/bookmark.js?");

/***/ }),

/***/ "./public/assets/js/db.js":
/*!********************************!*\
  !*** ./public/assets/js/db.js ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("\r\nfunction postRootPath(options) {\r\n    // Fetching it first\r\n    let data = utils.fetchDatabase();\r\n\r\n    if(!data) {\r\n        data = [];\r\n    }\r\n\r\n    const rootObj = {\r\n        root: options.root,\r\n        lastPlayed: false,\r\n        videos: []\r\n    }\r\n\r\n    const curPath = data.find(cur => cur.root === options.root);\r\n\r\n    if(!curPath) {\r\n        data.push(rootObj);\r\n    }\r\n    // const curVideo = curPath.videos.find(cur => cur.name === options.name);\r\n\r\n    localStorage.setItem('our_database', JSON.stringify(data));\r\n}\r\n\r\nfunction postVideo(options) {\r\n    // Fetching it first\r\n    let data = utils.fetchDatabase();\r\n\r\n    // console.log(options.completed);\r\n\r\n    const videoObj = {\r\n        position: options.position,\r\n        name: options.name,\r\n        completed: options.completed || false,\r\n        completion: options.completion || null,\r\n        duration: options.duration || null,\r\n        bookmarks: []\r\n    };\r\n\r\n    const curPath = data.find(cur => cur.root === options.root);\r\n\r\n    if(curPath) {\r\n        const curVideo = curPath.videos.find(cur => cur.name === options.name);\r\n\r\n        if(curVideo) {\r\n            return;\r\n        }\r\n    }\r\n\r\n    curPath.videos.push(videoObj);\r\n    \r\n    localStorage.setItem('our_database', JSON.stringify(data));\r\n}\r\n\r\nfunction updateVideo(options) {\r\n    // Fetching it first\r\n    let data = utils.fetchDatabase();\r\n\r\n    const curPath = data.find(cur => cur.root === options.root);\r\n\r\n    if(curPath) {\r\n        const curPathVideos = curPath.videos.map(cur => {\r\n            if(cur.name === options.name) {\r\n                let bookMarks = [...cur.bookmarks];\r\n                if(options.bookmarks) {\r\n                    bookMarks.push(options.bookmarks);\r\n                }\r\n                return {\r\n                    position: options.position || cur.position,\r\n                    name: options.name || cur.name,\r\n                    completed: options.completed || cur.completed || false,\r\n                    completion: options.completion || cur.completion || null,\r\n                    duration: options.duration || cur.duration || null,\r\n                    bookmarks: bookMarks || []\r\n                }\r\n            }\r\n            return cur;\r\n        });\r\n\r\n        curPath.videos = curPathVideos;\r\n        \r\n        localStorage.setItem('our_database', JSON.stringify(data));\r\n    }\r\n}\r\n\r\nfunction getVideoDetails(options, cb) {\r\n    // Fetching it first\r\n    let data = utils.fetchDatabase();\r\n\r\n    if(!data) return;\r\n\r\n    const curPath = data.find(cur => cur.root === options.root);\r\n\r\n    if(curPath) {\r\n        const curVideo = curPath.videos.find(cur => cur.name === options.name);\r\n\r\n        if(!curVideo) {\r\n            cb(options);\r\n        }\r\n\r\n        return curVideo;\r\n    }\r\n}\r\n\r\nfunction updateRoot(options) {\r\n    // Fetching it first\r\n    let data = utils.fetchDatabase();\r\n\r\n    const curPath = data.find(cur => cur.root === options.root);\r\n\r\n    curPath.lastPlayed = options;\r\n    localStorage.setItem('our_database', JSON.stringify(data));\r\n}\r\n\r\nfunction fetchDatabase() {\r\n    const data = localStorage.getItem('our_database');\r\n\r\n    return JSON.parse(data);\r\n}\r\n\r\nfunction fetchVideo(videoObj) {\r\n    // Fetching it first\r\n    let data = fetchDatabase();\r\n\r\n    if(!data) return;\r\n\r\n    const curPath = data.find(cur => cur.root === videoObj.root);\r\n\r\n    if(!curPath) throw new Error('Path is invalid');\r\n\r\n    const curVideo = curPath.videos.find(cur => cur.name === videoObj.name);\r\n\r\n    return curVideo;\r\n}\r\n\r\n\r\nmodule.exports = {\r\n    postRootPath,\r\n    postVideo,\r\n    updateVideo,\r\n    getVideoDetails,\r\n    updateRoot,\r\n    fetchDatabase,\r\n    fetchVideo,\r\n}\n\n//# sourceURL=webpack:///./public/assets/js/db.js?");

/***/ }),

/***/ "./public/assets/js/dragNDrop.js":
/*!***************************************!*\
  !*** ./public/assets/js/dragNDrop.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("class dragNDrop {\r\n    constructor(el) {\r\n        this.el = document.querySelector(el);\r\n        this.itemCount = null;\r\n        this.elCoords = this.el.getBoundingClientRect();\r\n        this.props = {\r\n            mouseIsDown: false,\r\n            mouseIsMoving: false,\r\n            mouseIsUp: false,\r\n            downEl: null,\r\n            upEl: null,\r\n            start: null,\r\n            downCoords: {\r\n                x: null,\r\n                y: null,\r\n            },\r\n            startedCoords: {\r\n                x: null,\r\n                y: null,\r\n            }\r\n        };\r\n        this.positionUpdate = [];\r\n        this.mouseData = {\r\n            x: null,\r\n            y: null,\r\n        };\r\n    }\r\n\r\n    init() {\r\n\r\n        this.setupElements();\r\n\r\n        this.initEvents();\r\n\r\n        this.initFrames();\r\n    }\r\n\r\n    setupElements() {\r\n        this.itemCount = this.el.childElementCount;\r\n\r\n        // Looping through items\r\n        for(let i = 0; i < this.itemCount; i++) {\r\n            const position = i+1;\r\n            const item = this.el.querySelector(`.dragndrop_item[data-baseposition=\"${position}\"]`);\r\n            \r\n            const calcTop = (position - 1) * 50;\r\n            item.style.transform = `translateY(${calcTop}px)`;\r\n        }\r\n    }\r\n\r\n    getItemEl(position) {\r\n        return this.el.querySelector(`.dragndrop_item[data-position=\"${position}\"]`);\r\n    }\r\n\r\n    initEvents() {\r\n        this.el.addEventListener('mousedown', this.mouseIsDown.bind(this));\r\n        this.el.addEventListener('mouseup', this.mouseIsUp.bind(this));\r\n        this.el.addEventListener('mousemove', this.mouseMove.bind(this));\r\n    }\r\n\r\n    initFrames() {\r\n        const thisClass = this;\r\n        window.requestAnimationFrame(function animate() {\r\n            if(thisClass.props.mouseIsDown) {\r\n                const calcTop = thisClass.props.downCoords.y - thisClass.props.startedCoords.y;\r\n                thisClass.props.downEl.style.transform = `translateY(${calcTop}px)`;\r\n\r\n                const targetEl = thisClass.getElByCoords(thisClass.getCoordsByContainer(thisClass.mouseData));\r\n\r\n\r\n                if(+targetEl.dataset.position !== +thisClass.props.start) {\r\n                    thisClass.move(targetEl, thisClass.props.start);\r\n                }\r\n            }\r\n\r\n            window.requestAnimationFrame(animate);\r\n        })\r\n    }\r\n\r\n    getElByCoords(coords) {\r\n        const position = Math.ceil(coords.y / 50);\r\n        return this.getItemEl(position);\r\n    }\r\n\r\n    getCoordsByContainer(e) {\r\n        return {\r\n            x: e.x - this.elCoords.x,\r\n            y: e.y - this.elCoords.y\r\n        }\r\n    }\r\n\r\n    mouseIsDown(e) {\r\n        e.preventDefault();\r\n        const el = e.path.filter(cur => {\r\n            if(cur.classList) {\r\n                return cur.classList.contains('video-link');\r\n            }\r\n        })[0];\r\n        this.props.mouseIsDown = true;\r\n\r\n        this.props.start = el.dataset.position\r\n\r\n        // const downCoords = this.getCoordsByContainer({x: e.pageX, y: e.pageY});\r\n\r\n        this.props.startedCoords = {x: e.offsetX, y: e.offsetY};\r\n\r\n        this.props.downEl = el;\r\n        this.props.downEl.style.zIndex = 200;\r\n    }\r\n\r\n    mouseIsUp(e) {\r\n        this.props.mouseIsDown = false;\r\n        this.move(this.props.downEl, this.props.start, true /** dontSend: true, Don't send update cause no change already sent for this */)\r\n    }\r\n\r\n    mouseMove(e) {\r\n        this.props.mouseIsMoving = true;\r\n        this.mouseData = {\r\n            x: e.pageX,\r\n            y: e.pageY\r\n        }\r\n\r\n        this.props.downCoords = this.getCoordsByContainer({x: e.pageX, y: e.pageY});\r\n    }\r\n\r\n    move(elToMove, to, dontSend) {\r\n\r\n        const pastPositionOfElToMove = elToMove.dataset.position;\r\n        const pastPositionOfDownEl = this.props.downEl.dataset.position;\r\n\r\n        this.props.start = elToMove.dataset.position;\r\n\r\n        const calcTop = (to - 1) * 50;\r\n        elToMove.style.transform = `translateY(${calcTop}px)`;\r\n        elToMove.dataset.position = to;\r\n        \r\n        this.props.downEl.dataset.position = this.props.start;\r\n\r\n        // if(!dontSend) {\r\n        //     this.positionUpdate.push({\r\n        //         past: pastPositionOfElToMove,\r\n        //         now: elToMove.dataset.position\r\n        //     })\r\n        //     this.positionUpdate.push({\r\n        //         past: pastPositionOfDownEl,\r\n        //         now: this.props.downEl.dataset.position\r\n        //     })\r\n        // } else {\r\n        //     this.updatePosition(this.positionUpdate);\r\n        //     this.positionUpdate = [];\r\n        // }\r\n    }\r\n\r\n}\r\n\r\nmodule.exports = dragNDrop;\n\n//# sourceURL=webpack:///./public/assets/js/dragNDrop.js?");

/***/ }),

/***/ "./public/assets/js/dropDown.js":
/*!**************************************!*\
  !*** ./public/assets/js/dropDown.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function initDropDown(selector, cb) {\r\n    $(selector).each(function() {\r\n\r\n        var dropdown = $('<div />').addClass(`${selector.slice(1)}Drop dropdown selectDropdown`);\r\n\r\n        dropdown.css('display', 'block');\r\n\r\n        $(this).wrap(dropdown);\r\n\r\n        var label = $('<span />').text($(this).attr('placeholder')).insertAfter($(this));\r\n        var list = $('<ul />');\r\n\r\n        $(this).find('option').each(function() {\r\n            list.append($('<li />').append($(`<a title=\"${$(this).text()}\" data-root=\"${$(this).attr('data-root')}\" />`).text($(this).text())));\r\n        });\r\n\r\n        list.insertAfter($(this));\r\n\r\n        if($(this).find('option:selected').length) {\r\n            label.text($(this).find('option:selected').text());\r\n            list.find('li:contains(' + $(this).find('option:selected').text() + ')').addClass('active');\r\n            $(this).parent().addClass('filled');\r\n        }\r\n\r\n        });\r\n\r\n        console.log(`.${selector.slice(1)}Drop ul li a`);\r\n        $(document).on('click touch', `.${selector.slice(1)}Drop ul li a`, function(e) {\r\n            e.preventDefault();\r\n            var dropdown = $(this).parent().parent().parent();\r\n            var active = $(this).parent().hasClass('active');\r\n            var label = active ? dropdown.find('select').attr('placeholder') : $(this).text();\r\n\r\n            dropdown.find('option').prop('selected', false);\r\n            dropdown.find('ul li').removeClass('active');\r\n\r\n            dropdown.toggleClass('filled', !active);\r\n            dropdown.children('span').text(label);\r\n\r\n            cb({\r\n                el: $(this)[0],\r\n                label: label\r\n            });\r\n\r\n            if(!active) {\r\n                dropdown.find('option:contains(' + $(this).text() + ')').prop('selected', true);\r\n                $(this).parent().addClass('active');\r\n            }\r\n\r\n            dropdown.removeClass('open');\r\n        });\r\n\r\n        $(`${selector}Drop > span`).on('click touch', function(e) {\r\n            var self = $(this).parent();\r\n            self.toggleClass('open');\r\n        });\r\n\r\n        $(document).on('click touch', function(e) {\r\n            var dropdown = $(`${selector}Drop`);\r\n            if(dropdown !== e.target && !dropdown.has(e.target).length) {\r\n                dropdown.removeClass('open');\r\n            }\r\n        });\r\n\r\n        // light\r\n        $('.switch input').on('change', function(e) {\r\n        $('.dropdown, body').toggleClass('light', $(this).is(':checked'));\r\n    });\r\n}\r\n\r\nmodule.exports = {\r\n    initDropDown\r\n}\n\n//# sourceURL=webpack:///./public/assets/js/dropDown.js?");

/***/ }),

/***/ "./public/assets/js/main.js":
/*!**********************************!*\
  !*** ./public/assets/js/main.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const Base64 = __webpack_require__(/*! ./utils/Base64 */ \"./public/assets/js/utils/Base64.js\");\r\nconst dragNDrop = __webpack_require__(/*! ./dragNDrop */ \"./public/assets/js/dragNDrop.js\");\r\nconst db = __webpack_require__(/*! ./db */ \"./public/assets/js/db.js\");\r\nconst rootModule = __webpack_require__(/*! ./root */ \"./public/assets/js/root.js\");\r\n\r\nrootModule.loadRoot();\r\n\r\nconst utils = __webpack_require__(/*! ./utils/utilities */ \"./public/assets/js/utils/utilities.js\");\r\n\r\nconst videos = document.querySelectorAll('.video-link');\r\nconst videoContainer = document.querySelector('.video');\r\n\r\n// window.currentPath = document.getElementById('currentPath').innerText;\r\n// dropDown.initDropDown('.choose_dir_dropdown');\r\n// dropDown.initDropDown('.choose_subdir_dropdown');\r\n\r\nfunction getDuration(options) {\r\n    const videoEl = document.createElement('video');\r\n    \r\n    const decodedVideo = Base64.encode(options.name);\r\n\r\n    videoEl.setAttribute('src', `${window.location.origin}/load?decodedVideo=${decodedVideo}`);\r\n    videoEl.setAttribute('type', 'video/mp4');\r\n\r\n    videoEl.onloadedmetadata = function(e) {\r\n        const duration = videoEl.duration;\r\n\r\n        db.updateVideo({\r\n            root: options.root,\r\n            name: options.name,\r\n            duration: duration\r\n        })\r\n\r\n    }\r\n}\r\n\r\n(async function() {\r\n    const res = await fetch(`${window.location.origin}/getDir`);\r\n\r\n    const data = await res.json();\r\n\r\n    console.log(data);\r\n})();\r\n\r\nlet vidLen = videos.length;\r\nif(videos.length > 50) {\r\n    vidLen = 50; \r\n}\r\n\r\n\r\nconst videosArr = [];\r\n\r\n// for(let i = 1; i <= vidLen; i++) {\r\n//     const video = document.querySelector(`.video-link[data-position=\"${i}\"]`);\r\n//     videosArr.push(video);\r\n// }\r\n\r\n// for(let i = 1; i <= vidLen; i++) {\r\n//     const video = videosArr[i-1];\r\n    \r\n//     const videoObj = {\r\n//         root: currentPath,\r\n//         position: video.dataset.position,\r\n//         name: video.querySelector('.name').innerText\r\n//     };\r\n\r\n//     loadVideo(videoObj);\r\n\r\n//     // Post Video to Database\r\n//     const videoDetails = db.getVideoDetails(videoObj, function() {\r\n//         db.postVideo(videoObj);\r\n//     });\r\n\r\n//     // init();\r\n\r\n//     getDuration(videoObj);\r\n\r\n//     video.addEventListener('click', function(e) {\r\n//         playVideo({\r\n//             root: currentPath,\r\n//             position: this.dataset.position,\r\n//             name: this.querySelector('.name').innerText\r\n//         });\r\n//     })\r\n// }\r\n\r\n// init();\r\n\r\nconst our_database = [\r\n    {\r\n        path: '/',\r\n        lastPlayed: 'videoObj',\r\n        videos: [\r\n            {   // videoObj\r\n                position: 1,\r\n                name: 'My Video',\r\n                completion: 600,\r\n                duration: 3500\r\n            }\r\n        ]\r\n    }\r\n]\r\n\r\nfunction loadVideo(options) {\r\n    // Fetching it first\r\n    let data = db.fetchDatabase();\r\n\r\n    if(!data) return;\r\n\r\n    const curPath = data.find(cur => cur.root === options.root);\r\n\r\n    if(curPath) {\r\n        const curVideo = curPath.videos.find(cur => cur.name === options.name);\r\n        \r\n        if(curVideo) {\r\n            const videoEl = document.querySelector(`.video-link[title=\"${curVideo.name}\"]`);\r\n\r\n            \r\n            const completionEl = videoEl.querySelector('.completion-range');\r\n            const videoCompletion = (curVideo.completion / curVideo.duration * 100).toFixed(2);\r\n            videoEl.dataset.completion = curVideo.completion;\r\n            completionEl.style.width = `${videoCompletion}%`;\r\n            videoEl.dataset.baseposition = curVideo.position;\r\n            \r\n            videoEl.dataset.position = curVideo.position;\r\n\r\n            if(curVideo.completed) {\r\n                videoEl.querySelector('.checkbox').classList.add('completed');\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\nfunction videoEnded() {\r\n    const position = this.dataset.videoposition;\r\n    const videoLink = document.querySelector(`.video-link[data-position=\"${position}\"]`);\r\n\r\n    videoLink.querySelector('.checkbox').classList.add('completed');\r\n\r\n    db.updateVideo({\r\n        completed: true,\r\n        root: currentPath,\r\n        name: document.querySelector(`.video-link[data-position=\"${position}\"]`).querySelector('.name').innerText\r\n    });\r\n\r\n    // console.log({\r\n    //     position: +position,\r\n    //     completed: true,\r\n    //     root: currentPath,\r\n    //     name: document.querySelector(`.video-link[data-position=\"${position}\"]`).querySelector('.name').innerText\r\n    // });\r\n    \r\n    playVideo({\r\n        position: +position + 1,\r\n        root: currentPath,\r\n        name: document.querySelector(`.video-link[data-position=\"${+position + 1}\"]`).querySelector('.name').innerText\r\n    });\r\n}\r\n\r\nfunction playVideo(videoObj) {\r\n    // Updating PlayVideo\r\n    // console.log(videoObj);\r\n    db.updateRoot(videoObj);\r\n\r\n    // Updating Video Title\r\n    const videoTitleHolder = document.querySelector('.video-title');\r\n    videoTitleHolder.innerHTML = videoObj.name;\r\n\r\n    // console.log(videoObj.position);\r\n    const videoLink = document.querySelector(`.video-link[title=\"${videoObj.name}\"]`);\r\n\r\n    const completionEl = videoLink.querySelector('.completion-range');\r\n\r\n    const links = videoLink.parentElement.querySelectorAll('.video-link');\r\n    links.forEach(link => {\r\n        link.classList.remove('active');\r\n    })\r\n\r\n    videoLink.classList.add('active');\r\n\r\n    const decodedVideo = Base64.encode(videoLink.querySelector('.name').innerText);\r\n    videoContainer.innerHTML = `<video src=\"${window.location.origin}/load?decodedVideo=${decodedVideo}\" controls muted></video>`\r\n    \r\n    const videoEl = document.querySelector(`video`);\r\n\r\n    const bookMarks = document.querySelectorAll('.video-timeline > .bookmark');\r\n    setTimeout(() => {\r\n        bookMarks.forEach(bookMark => {\r\n            bookMark.classList.add('hide');\r\n        })\r\n    }, 900)\r\n    \r\n    videoEl.addEventListener('mousestop', function(e) {\r\n        const bookMarks = document.querySelectorAll('.video-timeline > .bookmark');\r\n        bookMarks.forEach(bookMark => {\r\n            bookMark.classList.add('hide');\r\n        })\r\n    });\r\n\r\n    const bookmark = __webpack_require__(/*! ./bookmark */ \"./public/assets/js/bookmark.js\");\r\n    bookmark.showThisVideoBookMarks(videoObj);\r\n\r\n    // videoEl.addEventListener('mouseleave', function(e) {\r\n    //     const bookMarks = document.querySelectorAll('.video-timeline > .bookmark');\r\n    //     bookMarks.forEach(bookMark => {\r\n    //         bookMark.classList.add('hide');\r\n    //     })\r\n    // });\r\n    \r\n    videoEl.addEventListener('mousemove', function(e) {\r\n        const bookMarks = document.querySelectorAll('.video-timeline > .bookmark');\r\n        bookMarks.forEach(bookMark => {\r\n            bookMark.classList.remove('hide');\r\n        })\r\n    });\r\n\r\n    videoEl.onloadedmetadata = function() {\r\n        videoEl.currentTime = +videoLink.dataset.completion || 0;\r\n        // videoEl.play();\r\n\r\n        if(videoObj.currentTime) {\r\n            videoEl.currentTime = +videoObj.currentTime;\r\n        }\r\n\r\n\r\n        videoEl.addEventListener('keydown', async function(e) {\r\n            const videoCompletion = (videoEl.currentTime / videoEl.duration * 100).toFixed(2);\r\n            \r\n            if (event.ctrlKey && event.key === 'b') {\r\n                videoEl.pause();\r\n                setTimeout(() => {\r\n                    showBookMarkAddOption(videoCompletion, {\r\n                        timeStamp: videoEl.currentTime,\r\n                        name: videoObj.name,\r\n                        root: videoObj.root\r\n                    });\r\n                }, 100);\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    videoEl.addEventListener('ended', videoEnded);\r\n\r\n    videoEl.addEventListener('timeupdate', function() {\r\n\r\n        const videoCompletion = (videoEl.currentTime / videoEl.duration * 100).toFixed(2);\r\n\r\n        videoLink.dataset.completion = videoEl.currentTime;\r\n\r\n        db.updateVideo({\r\n            root: videoObj.root,\r\n            name: videoObj.name,\r\n            completion: videoEl.currentTime\r\n        })\r\n\r\n        completionEl.style.width = `${videoCompletion}%`;\r\n\r\n        removeBookMarkModal();\r\n    })\r\n}\r\n\r\nasync function removeBookMarkModal() {\r\n    const videoTimeLine = document.querySelector('.video-timeline');\r\n    let bookMarkModal = videoTimeLine.querySelector('.add_bookmark_option');\r\n\r\n    if(!bookMarkModal) return false;\r\n\r\n    bookMarkModal.classList.add('hide');\r\n\r\n    await new Promise((res, rej) => {\r\n        setTimeout(() => {\r\n            bookMarkModal.remove();\r\n            res();\r\n        }, 250);\r\n    })\r\n\r\n    return true;\r\n}\r\n\r\nasync function showBookMarkAddOption(videoCompletion, videoObj) {\r\n    const videoTimeLine = document.querySelector('.video-timeline');\r\n    let bookMarkModal = videoTimeLine.querySelector('.add_bookmark_option');\r\n\r\n    if(bookMarkModal) {\r\n        await removeBookMarkModal();\r\n    }\r\n    \r\n    const htmlToAdd = `\r\n        <div class=\"add_bookmark_option\">\r\n            <div class=\"label\">\r\n                <label for=\"\">Add Bookmark</label>\r\n            </div>\r\n            <div class=\"input\">\r\n                <input tabindex=\"0\" id=\"bookmark_input\" class=\"bookmark_input\" type=\"text\" placeholder=\"Enter Bookmark...\">\r\n            </div>\r\n            <div class=\"notice\">\r\n                <p><span>Note:</span> Hit Enter to add the bookmark.</p>\r\n            </div>\r\n        </div>\r\n    `;\r\n    videoTimeLine.insertAdjacentHTML('beforeend', htmlToAdd);\r\n\r\n    bookMarkModal = videoTimeLine.querySelector('.add_bookmark_option');\r\n\r\n    setTimeout(() => {\r\n        const bookmarkInput = document.getElementById('bookmark_input');\r\n        bookmarkInput.focus();\r\n    }, 100);\r\n\r\n    // Init BookMark Input Handler\r\n    const bookmark = __webpack_require__(/*! ./bookmark */ \"./public/assets/js/bookmark.js\");\r\n    bookmark.initBookMarkInputHandler(videoObj);\r\n\r\n    if(videoCompletion < 20) {\r\n        bookMarkModal.style.left = `${0}%`;\r\n    } else\r\n    if(videoCompletion > 90) {\r\n        bookMarkModal.style.left = `auto`;\r\n        bookMarkModal.style.right = `${0}%`;\r\n    } else {\r\n        bookMarkModal.style.left = `${videoCompletion}%`;\r\n        bookMarkModal.style.transform = `translateX(-50%)`;\r\n    }\r\n\r\n\r\n}\r\n\r\n(function (mouseStopDelay) {\r\n    var timeout;\r\n    document.addEventListener('mousemove', function (e) {\r\n        clearTimeout(timeout);\r\n        timeout = setTimeout(function () {\r\n            var event = new CustomEvent(\"mousestop\", {\r\n                detail: {\r\n                    clientX: e.clientX,\r\n                    clientY: e.clientY\r\n                },\r\n                bubbles: true,\r\n                cancelable: true\r\n            });\r\n            e.target.dispatchEvent(event);\r\n        }, mouseStopDelay);\r\n    });\r\n}(2600));\r\n\r\nfunction init() {\r\n\r\n    db.postRootPath({\r\n        root: currentPath\r\n    });\r\n\r\n    window.addEventListener('keydown', async function(e) {\r\n        if(e.key === 'Escape') {\r\n            const removed = await removeBookMarkModal();\r\n            \r\n            if(removed) {\r\n                const videoEl = document.querySelector(`video`);\r\n                videoEl.play();\r\n            }\r\n        }\r\n    })\r\n\r\n    window.addEventListener('click', outOfBookMarkModal);\r\n\r\n    function outOfBookMarkModal(e) {\r\n        const videoTimeLine = document.querySelector('.video-timeline');\r\n        if(videoTimeLine) {\r\n            let bookMarkModal = videoTimeLine.querySelector('.add_bookmark_option');\r\n            if(bookMarkModal) {\r\n                if(!e.path.includes(bookMarkModal)) {\r\n                    removeBookMarkModal();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    const data = db.fetchDatabase();\r\n\r\n    const curRoot = data.find(cur => cur.root === currentPath);\r\n    let InCompletedVideo = curRoot.lastPlayed;\r\n\r\n    // console.log(InCompletedVideo);\r\n    if(!InCompletedVideo) {\r\n        InCompletedVideo = curRoot.videos.filter(cur => cur.completed === false)[0];\r\n    }\r\n\r\n    // console.log(InCompletedVideo);\r\n\r\n    // Playing video\r\n    playVideo({\r\n        position: InCompletedVideo.position,\r\n        root: currentPath,\r\n        name: InCompletedVideo.name\r\n    });\r\n\r\n    const list = new dragNDrop('.list');\r\n    list.init();\r\n}\r\n\r\nfunction updatePosition() {\r\n    for(let i = 1; i <= vidLen; i++) {\r\n        const updatedOne = document.querySelector(`.video-link[data-position=\"${i}\"]`);\r\n\r\n        const position = +updatedOne.dataset.position;\r\n        const basePosition = +updatedOne.dataset.baseposition;\r\n\r\n        if(position !== basePosition) {\r\n            const videoEl = document.querySelector(`.video-link[data-baseposition=\"${basePosition}\"]`);\r\n            db.updateVideo({\r\n                root: currentPath,\r\n                name: videoEl.querySelector('.name').innerText,\r\n                position: videoEl.dataset.position\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\n// document.getElementById('save').onclick = updatePosition;\r\n\r\nmodule.exports = {\r\n    playVideo\r\n}\n\n//# sourceURL=webpack:///./public/assets/js/main.js?");

/***/ }),

/***/ "./public/assets/js/root.js":
/*!**********************************!*\
  !*** ./public/assets/js/root.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const db = __webpack_require__(/*! ./db */ \"./public/assets/js/db.js\");\r\nconst dropDown = __webpack_require__(/*! ./dropDown */ \"./public/assets/js/dropDown.js\");\r\nconst utils = __webpack_require__(/*! ./utils/utilities */ \"./public/assets/js/utils/utilities.js\");\r\n\r\n\r\nfunction loadRoot() {\r\n    const videoListContainer = document.querySelector('.video-list > .list');\r\n    \r\n    // Fetching database\r\n    const data = db.fetchDatabase();\r\n\r\n    if(!data) return null;\r\n\r\n    console.log(data);\r\n    // console.log(data[0].root.split('\\\\'));\r\n\r\n    const chooseDirSelect = document.querySelector('.choose_dir > select');\r\n    chooseDirSelect.innerHTML = '';\r\n    data.forEach(roots => {\r\n        const rootName = roots.root.split('\\\\')[roots.root.split('\\\\').length - 1];\r\n        const htmlToAdd = `\r\n            <option data-root=\"${roots.root}\" class='short' data-limit='26'>${rootName}</option>\r\n        `;\r\n        chooseDirSelect.insertAdjacentHTML('beforeend', htmlToAdd);\r\n    })\r\n\r\n    dropDown.initDropDown('.choose_dir_dropdown', function(props) {\r\n        /**\r\n         * props = {\r\n         *      el: Element,\r\n         *      label: Text\r\n         * }\r\n         */\r\n\r\n        const root = props.el.dataset.root;\r\n\r\n        const curRoot = data.find(cur => cur.root === root);\r\n\r\n        if(curRoot.videos && curRoot.videos.length > 0) {\r\n            const videosList = utils.sortVideoList(curRoot.videos);\r\n            videoListContainer.innerHTML = '';\r\n            videosList.forEach((video, ind) => {\r\n                const htmlToAdd = `\r\n                    <li data-position=\"${ind+1}\" data-baseposition=\"${ind+1}\" class=\"video-link\">\r\n                        <div class=\"checkbox\">\r\n                            <svg id=\"check-mark\" xmlns=\"http://www.w3.org/2000/svg\" width=\"512\" height=\"512\" viewBox=\"0 0 512 512\">\r\n                                <g id=\"Group_2\" data-name=\"Group 2\">\r\n                                <path id=\"Path_18\" data-name=\"Path 18\" d=\"M256,0C114.844,0,0,114.844,0,256S114.844,512,256,512,512,397.156,512,256,397.156,0,256,0ZM402.207,182.625,217.75,367.083a21.325,21.325,0,0,1-30.166,0L88.46,267.958a10.664,10.664,0,0,1,0-15.085l15.081-15.082a10.669,10.669,0,0,1,15.086,0l84.04,84.042L372.04,152.458a10.669,10.669,0,0,1,15.086,0l15.081,15.082A10.664,10.664,0,0,1,402.207,182.625Z\" fill=\"#e24a1a\"/>\r\n                                </g>\r\n                            </svg>                          \r\n                        </div>\r\n                        <div class=\"name\">${video.name}</div>\r\n                        <div class=\"completion-range\"></div>\r\n                    </li>\r\n                `;\r\n                videoListContainer.insertAdjacentHTML('beforeend', htmlToAdd);\r\n            })\r\n        }\r\n        \r\n        if(!curRoot.subDir || !curRoot.subDir.length > 0) return;\r\n\r\n        const chooseSubDirSelect = document.querySelector('.choose_subdir > select');\r\n        chooseSubDirSelect.innerHTML = '';\r\n        curRoot.subDir.forEach(roots => {\r\n            const rootName = roots.root.split('\\\\')[roots.root.split('\\\\').length - 1];\r\n            const htmlToAdd = `\r\n                <option data-subRoot=\"${roots.root}\" data-root=\"${root}\" class='short' data-limit='26'>${rootName}</option>\r\n            `;\r\n            chooseSubDirSelect.insertAdjacentHTML('beforeend', htmlToAdd);\r\n        })\r\n\r\n        dropDown.initDropDown('.choose_subdir_dropdown', function(d) {\r\n            console.log(d);\r\n        });\r\n\r\n\r\n    });\r\n    \r\n    chooseDirSelect.onchange = function () {\r\n        console.log(this.selected);\r\n    }\r\n\r\n}\r\n\r\n\r\nmodule.exports = {\r\n    loadRoot\r\n}\n\n//# sourceURL=webpack:///./public/assets/js/root.js?");

/***/ }),

/***/ "./public/assets/js/utils/Base64.js":
/*!******************************************!*\
  !*** ./public/assets/js/utils/Base64.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("const Base64 = { \r\n    _keyStr: \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"+ \r\n        \"abcdefghijklmnopqrstuvwxyz0123456789+/=\", \r\n    encode: function(e) { \r\n        var t = \"\"; \r\n        var n, r, i, s, o, u, a; \r\n        var f = 0; \r\n        e = Base64._utf8_encode(e); \r\n        while (f < e.length) { \r\n            n = e.charCodeAt(f++); \r\n            r = e.charCodeAt(f++); \r\n            i = e.charCodeAt(f++); \r\n            s = n >> 2; \r\n            o = (n & 3) << 4 | r >> 4; \r\n            u = (r & 15) << 2 | i >> 6; \r\n            a = i & 63; \r\n            if (isNaN(r)) { \r\n                u = a = 64 \r\n            } else if (isNaN(i)) { \r\n                a = 64 \r\n            } \r\n            t = t + \r\n                this._keyStr.charAt(s) + \r\n                this._keyStr.charAt(o) + \r\n                this._keyStr.charAt(u) + \r\n                this._keyStr.charAt(a) \r\n        } \r\n        return t \r\n    }, \r\n    decode: function(e) { \r\n        var t = \"\"; \r\n        var n, r, i; \r\n        var s, o, u, a; \r\n        var f = 0; \r\n        e = e.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\"); \r\n        while (f < e.length) { \r\n            s = this._keyStr.indexOf(e.charAt(f++)); \r\n            o = this._keyStr.indexOf(e.charAt(f++)); \r\n            u = this._keyStr.indexOf(e.charAt(f++)); \r\n            a = this._keyStr.indexOf(e.charAt(f++)); \r\n            n = s << 2 | o >> 4; \r\n            r = (o & 15) << 4 | u >> 2; \r\n            i = (u & 3) << 6 | a; \r\n            t = t + String.fromCharCode(n); \r\n            if (u != 64) { \r\n                t = t + String.fromCharCode(r) \r\n            } \r\n            if (a != 64) { \r\n                t = t + String.fromCharCode(i) \r\n            } \r\n        } \r\n        t = Base64._utf8_decode(t); \r\n        return t \r\n    }, \r\n    _utf8_encode: function(e) { \r\n        e = e.replace(/\\r\\n/g, \"\\n\"); \r\n        var t = \"\"; \r\n        for (var n = 0; n < e.length; n++) { \r\n            var r = e.charCodeAt(n); \r\n            if (r < 128) { \r\n                t += String.fromCharCode(r) \r\n            } else if (r > 127 && r < 2048) { \r\n                t += \r\n                    String.fromCharCode(r >> 6 | 192); \r\n                t += \r\n                    String.fromCharCode(r & 63 | 128) \r\n            } else { \r\n                t += \r\n                    String.fromCharCode(r >> 12 | 224); \r\n                t += \r\n                    String.fromCharCode(r >> 6 & 63 | 128); \r\n                t += \r\n                    String.fromCharCode(r & 63 | 128) \r\n            } \r\n        } \r\n        return t \r\n    }, \r\n    _utf8_decode: function(e) { \r\n        var t = \"\"; \r\n        var n = 0; \r\n        var r = c1 = c2 = 0; \r\n        while (n < e.length) { \r\n            r = e.charCodeAt(n); \r\n            if (r < 128) { \r\n                t += String.fromCharCode(r); \r\n                n++ \r\n            } else if (r > 191 && r < 224) { \r\n                c2 = e.charCodeAt(n + 1); \r\n                t += String.fromCharCode( \r\n                    (r & 31) << 6 | c2 & 63); \r\n                \r\n                n += 2 \r\n            } else { \r\n                c2 = e.charCodeAt(n + 1); \r\n                c3 = e.charCodeAt(n + 2); \r\n                t += String.fromCharCode( \r\n                    (r & 15) << 12 | (c2 & 63) \r\n                    << 6 | c3 & 63); \r\n                n += 3 \r\n            } \r\n        } \r\n        return t \r\n    } \r\n} \r\n\r\nmodule.exports = Base64;\n\n//# sourceURL=webpack:///./public/assets/js/utils/Base64.js?");

/***/ }),

/***/ "./public/assets/js/utils/utilities.js":
/*!*********************************************!*\
  !*** ./public/assets/js/utils/utilities.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("\r\n\r\nfunction sortVideoList(videoArr) {\r\n    function fnStr(str1) {\r\n        const arr = [];\r\n        for(let i = 0; i < str1.length; i++) {\r\n            if(!isNaN(str1[i]) && str1[i] !== ' ') {\r\n                arr.push(+str1[i]);\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n        \r\n        return +arr.join('');\r\n    }\r\n    \r\n    return videoArr.sort((a,b)=>fnStr(a.name)-fnStr(b.name));\r\n}\r\n\r\n\r\nmodule.exports = {\r\n    sortVideoList\r\n}\n\n//# sourceURL=webpack:///./public/assets/js/utils/utilities.js?");

/***/ })

/******/ });